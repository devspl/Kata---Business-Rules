BRAINSTORMING:
- assumes Payment per Product
- Payment made of Product and Amount
- IPaymentHandler where T is Product
	- bool ShouldHandle(Payment payment);
	- void HandlePayment(Payment payment);
- making a Payment raises event that gets handled by every IPaymentHandlerFor implementations that respond true to 'ShouldHandle'
- HandlePayment does only the process that is needed for Product from Payment meeting ShouldHandle criterias (implementation)

PROBLEMS: 
- avoid ServiceLocator using IoC containers - inject handler factory?
- design event raising - DDD style?